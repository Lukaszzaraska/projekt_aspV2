// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projekt_asp.Models;

namespace projekt_asp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("projekt_asp.Models.MsgModel", b =>
                {
                    b.Property<int>("MsgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date_send")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login_for")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Msg_readed")
                        .HasColumnType("bit");

                    b.Property<string>("registerModelUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MsgId");

                    b.HasIndex("registerModelUserId");

                    b.ToTable("User_Msg");
                });

            modelBuilder.Entity("projekt_asp.Models.RegisterModel", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("position")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("projekt_asp.Models.TimeModel", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hours_worked")
                        .HasColumnType("int");

                    b.Property<string>("RegisterModelUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TimeId");

                    b.HasIndex("RegisterModelUserId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("projekt_asp.Models.MsgModel", b =>
                {
                    b.HasOne("projekt_asp.Models.RegisterModel", "registerModel")
                        .WithMany("MsgModels")
                        .HasForeignKey("registerModelUserId");

                    b.Navigation("registerModel");
                });

            modelBuilder.Entity("projekt_asp.Models.TimeModel", b =>
                {
                    b.HasOne("projekt_asp.Models.RegisterModel", "RegisterModel")
                        .WithMany("TimeModels")
                        .HasForeignKey("RegisterModelUserId");

                    b.Navigation("RegisterModel");
                });

            modelBuilder.Entity("projekt_asp.Models.RegisterModel", b =>
                {
                    b.Navigation("MsgModels");

                    b.Navigation("TimeModels");
                });
#pragma warning restore 612, 618
        }
    }
}
